hello everyone today we are going to show the progress of our project facial recognition based authentication system for realtime Access Control in today's security focused World our project introduces a real-time facial recognization system for seamless touchfree Access Control by using unique facial Biometrics it enhances the security compared to traditional methods like key cards or PIN codes the system offers fast accurate authentication ideal for for high security environments such as server rooms and offices it adapts to lightening changes and evolving facial features ensuring reliable performance with easy deployment requiring only camera this versatile solution is suitable for various secure facilities facial recognization authentication systems enhance real-time Access Control by integrating multiactor authentication and data analytics techniques like lb pH pressure face and sparse igen faces provide rever recognization in diverse conditions with GPU acceleration for realtime performance multiactor authentication strengthens security by combining biometric data with tokens or passwords effectively addressing privacy and post variability challenges for scalable Access Control Solutions ion faces was an important breakthrough in facial recognization using principal component analysis PC to make processing facial features easier it simplifies complex facial data into key components called igen faces which improves efficiency however it has trouble handling challenges in lightening and facial expressions making it less effective in real world situations while it works well in controlled environments newer methods like Fisher faces and lbph have become better at managing this real life challenges fure face is a powerful technique for facial recognition that builds upon previous methods by combining two key techniques principal component analysis PCA and linear discriminant analysis LDA it first uses PCA to simplify the facial data reducing the dimensionality and then applies LDA to emphasize the difference between faces making it easier to differentiate between individuals handling variability one of the main advantages of of fishop faces is its ability to manage variability within classes LBH how LPB Works LPB is a simple but effective facial recognition method it Compares each pixel to its neighbor creating unique Library patterns for different region of the face these patterns are then converted into histograms which serve as a fingerprint for the face LPB is great at handling light change is making a idle for real world environments it focus on relative contrast of image regions which helps it remain accurate even with wearing lightning this SL Compares three fa facial recognition algorithm e faces fishop faces and LPB e faces is simple fast and easy to implement but it struggles with lightning and expression variation it's best for controlled environment where else facial faces handles lightning and expression changes well and separates different individuals effectively how however it needs to pre-process and is sensitive to misalign ments it's idle for wearing environment on the other hand LPB is lightweight and great for Real Time Low resource settings but is vulnerable to spoofing and expression changes it's best for quick recognition task so each algorithm has its pros and cons so the choice depends on the specific use case secure human identification using enhanced liveness detection or Shield is a realtime facial recognization system that secures restricted areas by integrating with devices like smart locks it combines Google signin with facial recognization using the lbph algorithm for multiactor authentication realtime facial data is captured through open CV ensuring accurate verification after Google signning our project demonstrates Access Control Management via a userfriendly web application with future enhancements planned for liveness detection to prevent this spoofing and improve security now let's go through the two key components of Shield system facial authentication and Google authentication starting with facial authentication the access request initiation where the user requests the system which triggers the facial authentication process then the system captures uses facial data in real time using the devices camera in data pre-processing phase the captured video is converted into a format that can be processed by the recognition algorithm in this case is the lbph training model comes next where the users's processed data is trained and over time the accuracy is improved after that the facial recognition process um verifies the facial data of the stored template to authenticate the user finally we implement the live we plan to implement the livel detection where users are ensured that there is no spoofing attack happening or there is no still image use to bypass the system now moving on to the right hand side there's a Google authentication this happens when user initially signs up using a Google SSO wherein user authenticates and the credentials of the user are saved in Fire based database the system issues a identification token then using Google o API is we can verify the users login attempt finally we are monitoring this and maintaining the logs to help Incident Management and improve the accountability and security authorization is segregated as admin and user licensed Authority is granted admin rights and added directly to the Firebase admin conso ensuring secure admin control admin gets exclusive rights to user management dashboard to manage and monitor users admin will also have rights to assign rules to the users future development will be we will be assign doing locking monitoring to track the activities for better oversight on the user uh registration authentication SES the user will be signing up using Google SSO and we will be leveraging all 2.0 for secure authentication after verification the user facial data is captured for future logins once the register user does not have to enter the credential every time and can use facial recognition alone for the authentication purposes okay okay so for system architecture in the first diagram we see the architecture for face recognition expression classification it starts by training the system with images mapping face IDs and mapping faces to the IDS and testing with new images the best face recognition algorithm is selected and finally the system performs expression recognition in the second diagram shows how face recognition works in detail the process starts with inputting a face image extracting key features using local binary pattern lpp and classifying this features to identify the person together this diagrams show how the system both identifies faces and interprets expression efficiently let me talk about the current implementation progress uh right now we are using open CV python library to implement facial recognition in real time uh we have split our app into two parts front end and back end the back end is developed using flask framework using Python language and the front front end is developed using uh nextjs framework using typescript uh we are going to handle communication between the front end and uh backend using sockets uh for real-time communication realtime transmission of image data back and forth from server as well as client okay so the database structure we are right now following is by storing the captured images for training as different folders associated with the username in the folder called data set uh we are going to uh we are right now using lbph algorithm from open CV for visal recognition so let me uh demonstrate the progress of our app this is how the our source code so our source code has two folders client and server as I mentioned earlier the client is developed using nextjs uh using typescript and the server is developed using the flask framework using Python programming language uh I have developed a script called setup.py which can be uh run to actually set up the project also to uh run the project after setting up once the setup is done uh I'm running it right now I have the setup ready I just have to start the front end as well as the back end this starts uh the front server server started right now and the client as well in the uh same terminal so let me wait until the server as well as the client starts running so server is already running I'm waiting for the client okay it is running right now so I have opened the client in my browser so this is Shield the facial recognition app that we have have developed for authentication purposes so it has two options two buttons capture your face that is mainly used for training our phase for facial recognition facial recognition which uses the trained model to recognize the face and authenticate the person this is uh app. Pi folder where we are actually using lbps facial recognizer recognition algorithm for recognizing faces let me open Capture your face before that I will show you uh uh okay let me open it first okay this is how the UI looks like here you can see the data set folder where the images will be stored after capturing I'm giving my name as raj and I'm starting the capturing of my face and you can see the percentage at the bottom here it captures about 120 uh plus frames for training okay my uh face is being trained now after capturing the data okay it is trained now I'm going to capture my teammate shani's face for verification uh the working of our app so I'm recording her face by giving her name and capturing it okay okay we are capturing uh her frames right now you can see the percentage below the progress uh once uh it starts once once the capture is completed it starts the training and once the training is done you can see two faes are trained as of now I'm going to use facial recognition uh feature now okay you can see in the data set folder where we have two different folders for each of us and it has it has around 120 plus images for training okay and now uh this is the trainer um model the model which is developed for uh uh using in future for recognition of face so I'm going to go back to my app I'm going to open facial recognition uh page for recognizing my face okay I'm going to give my name I'm going to give the name used uh earlier for training I'm trying to recognize it it should allow me authorize me as a proper uh valid person okay it recognize me as raj okay I'm going to recognize shani's phase now and give her actual name which I Ed while actually training

so okay hash it recognized her accurately as Shivani now I'm going to recognize my face using uh shivani's name it should not let me authenticate so authorization should should be denied okay access is denied for me now we will try to do the same with Shivani giving my name it's to deny the

authorization okay it denied okay okay this is the progress of our project as of now thank you so far we have achieved several key milestones in our project implemented real time pH data collection for inst instantaneous information gathering secure communication setup and robust backend for Effective data processing we have also implemented uh facial recognition system which uses the data set to recognize the users currently we have trained two images looking ahead we are going to uh create admin dashboard and sign in process for better control you're going to have access control mechanism to manage the user permissions and we are going to focus on the accuracy of the image recognition we're going to also Implement SSO for the sign up and sign in to enance security security and risk features so we have Incorporated biometric based facial recognition which is harder to imitate additionally we have planed to integrate multiactor authentication MFA combining a password with facial recognition for added protection realtime monitoring allows instant access decisions and alerts uh encryption Safeguard facial data in transit and storage while anti spoofing mechanism like a blank detection ensure that only life faces can be recognized preventing misuse through photos or videos solution benefits our system uses the lbph algorithm to handle facial recognition even in varing lighting conditions providing fast and scalable excess control for organizations of any size we have integrated single sign on SSO for seamless user experience experience while keeping the process secure Additionally the low computational cost enhances scalability and future plans include liveness detection to prevent smoing attacks for the future work we will further optimize the lbph algorithm for improved accuracy under different conditions like lightning or facial expressions we are also developing an admin dashboard for advanced user management and access control livess detection will soon be added to distinguish between real faces and fake images further strengthening system security to conclude the lbph algorithm is highly efficient for realtime facial recognition in Dynamic conditions the admin dashboard will enhance user management while multiactor authentication will bring another level of security expanding to mobile platform will allow for scalability making the system versatile and secure in various environments thank you